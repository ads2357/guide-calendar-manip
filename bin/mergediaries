#!/usr/bin/env python3

import argparse
import sys
import logging

import guidediary

logging.basicConfig(level=logging.INFO)

argObj = argparse.ArgumentParser()
argObj.add_argument('infiles', nargs='*', type=argparse.FileType('rb'), default=[sys.stdin.buffer])
argObj.add_argument('-o', type=argparse.FileType('wb'), default=sys.stdout.buffer)
argObj.add_argument('--notAddedFile', type=argparse.FileType('w'))
argObj.add_argument('-n', action='store_true')
argObj.add_argument('--report_nonexact_duplicates', action='store_true')
argObj.add_argument('--report_f', type=argparse.FileType('w'), default=sys.stderr)
argObj.add_argument('--dump_edups', type=argparse.FileType('w'))

args = argObj.parse_args()

rewriter = guidediary.DiaryRewriter()

for diary_f in args.infiles:
    rewriter.addFile(diary_f)
    diary_f.close()

if args.notAddedFile:
    rewriter.writeNotAddedFile(args.notAddedFile)
    args.notAddedFile.close()
    
if not args.n:
    try:
        rewriter.writeFile(args.o)
    except DiaryRewriterException as ex:
        logging.exception(ex)
        exit(1)

def generate_ordinals():
    import itertools
    yield '1st'
    yield '2nd'
    yield '3rd'
    for num in itertools.count(4):
        yield str(num) + 'th'

if args.report_nonexact_duplicates:
    reportout = args.report_f
    reportout.write('Non-exact duplicates, newer entries not added:\n')
    reportout.writelines(
        [str(num) + ' duplicate: ' + str(dup)+'\n\n'
         for (num,dup) in zip(generate_ordinals(), rewriter.getNonexactDuplicates())])

if args.dump_edups:
    args.dump_edups.writelines([repr(e) + '\n' for e in rewriter.getExactDups()])
    
logging.info(rewriter.getStats())
